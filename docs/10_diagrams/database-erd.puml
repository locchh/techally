@startuml TechAlly_Database_ERD
!define Table(name,desc) class name as "desc" << (T,#FFAAAA) >>
!define PrimaryKey(x) <&key> x
!define ForeignKey(x) <&link> x
!define NotNull(x) <&check> x
!define Unique(x) <&target> x

title TechAlly E-Commerce Database Entity Relationship Diagram

' Core User Tables
Table(users, "users") {
  PrimaryKey(id): UUID
  Unique(email): VARCHAR(255)
  NotNull(password_hash): VARCHAR(255)
  NotNull(first_name): VARCHAR(100)
  NotNull(last_name): VARCHAR(100)
  phone_number: VARCHAR(20)
  date_of_birth: DATE
  role: VARCHAR(50)
  status: VARCHAR(50)
  created_at: TIMESTAMP
  updated_at: TIMESTAMP
  deleted_at: TIMESTAMP
}

Table(user_sessions, "user_sessions") {
  PrimaryKey(id): UUID
  ForeignKey(user_id): UUID
  Unique(token_hash): VARCHAR(255)
  ip_address: INET
  expires_at: TIMESTAMP
  created_at: TIMESTAMP
}

Table(addresses, "addresses") {
  PrimaryKey(id): UUID
  ForeignKey(user_id): UUID
  type: VARCHAR(50)
  street_line1: VARCHAR(255)
  street_line2: VARCHAR(255)
  city: VARCHAR(100)
  state_province: VARCHAR(100)
  postal_code: VARCHAR(20)
  country_code: CHAR(2)
  created_at: TIMESTAMP
}

' Product Tables
Table(products, "products") {
  PrimaryKey(id): UUID
  Unique(sku): VARCHAR(100)
  NotNull(name): VARCHAR(255)
  Unique(slug): VARCHAR(255)
  description: TEXT
  ForeignKey(category_id): UUID
  ForeignKey(brand_id): UUID
  base_price: DECIMAL(10,2)
  is_published: BOOLEAN
  created_at: TIMESTAMP
  updated_at: TIMESTAMP
}

Table(product_variants, "product_variants") {
  PrimaryKey(id): UUID
  ForeignKey(product_id): UUID
  Unique(sku): VARCHAR(100)
  name: VARCHAR(255)
  attributes: JSONB
  price: DECIMAL(10,2)
  created_at: TIMESTAMP
}

Table(categories, "categories") {
  PrimaryKey(id): UUID
  ForeignKey(parent_id): UUID
  NotNull(name): VARCHAR(100)
  Unique(slug): VARCHAR(100)
  description: TEXT
  position: INT
  created_at: TIMESTAMP
}

Table(brands, "brands") {
  PrimaryKey(id): UUID
  NotNull(name): VARCHAR(100)
  Unique(slug): VARCHAR(100)
  logo_url: TEXT
  created_at: TIMESTAMP
}

' Order Tables
Table(orders, "orders") {
  PrimaryKey(id): UUID
  Unique(order_number): VARCHAR(50)
  ForeignKey(user_id): UUID
  status: VARCHAR(50)
  payment_status: VARCHAR(50)
  subtotal: DECIMAL(10,2)
  tax_amount: DECIMAL(10,2)
  shipping_amount: DECIMAL(10,2)
  total_amount: DECIMAL(10,2)
  created_at: TIMESTAMP
  updated_at: TIMESTAMP
}

Table(order_items, "order_items") {
  PrimaryKey(id): UUID
  ForeignKey(order_id): UUID
  ForeignKey(product_id): UUID
  ForeignKey(variant_id): UUID
  quantity: INT
  unit_price: DECIMAL(10,2)
  total_amount: DECIMAL(10,2)
  created_at: TIMESTAMP
}

' Payment Tables
Table(payments, "payments") {
  PrimaryKey(id): UUID
  ForeignKey(order_id): UUID
  Unique(transaction_id): VARCHAR(255)
  gateway: VARCHAR(50)
  type: VARCHAR(50)
  status: VARCHAR(50)
  amount: DECIMAL(10,2)
  created_at: TIMESTAMP
}

Table(payment_methods, "payment_methods") {
  PrimaryKey(id): UUID
  ForeignKey(user_id): UUID
  type: VARCHAR(50)
  card_last4: CHAR(4)
  card_brand: VARCHAR(50)
  is_default: BOOLEAN
  created_at: TIMESTAMP
}

' Inventory Tables
Table(inventory, "inventory") {
  PrimaryKey(id): UUID
  ForeignKey(product_id): UUID
  ForeignKey(variant_id): UUID
  ForeignKey(warehouse_id): UUID
  quantity_on_hand: INT
  quantity_reserved: INT
  reorder_point: INT
  created_at: TIMESTAMP
  updated_at: TIMESTAMP
}

Table(warehouses, "warehouses") {
  PrimaryKey(id): UUID
  NotNull(name): VARCHAR(100)
  NotNull(code): VARCHAR(10)
  address: TEXT
  created_at: TIMESTAMP
}

Table(stock_movements, "stock_movements") {
  PrimaryKey(id): UUID
  ForeignKey(inventory_id): UUID
  type: VARCHAR(50)
  quantity: INT
  reference_id: UUID
  created_at: TIMESTAMP
}

' Review Tables
Table(reviews, "reviews") {
  PrimaryKey(id): UUID
  ForeignKey(product_id): UUID
  ForeignKey(user_id): UUID
  rating: INT
  title: VARCHAR(255)
  content: TEXT
  is_verified_purchase: BOOLEAN
  created_at: TIMESTAMP
}

' Cart Tables
Table(cart_items, "cart_items") {
  PrimaryKey(id): UUID
  ForeignKey(user_id): UUID
  ForeignKey(product_id): UUID
  ForeignKey(variant_id): UUID
  quantity: INT
  added_at: TIMESTAMP
  updated_at: TIMESTAMP
}

' Wishlist Tables
Table(wishlists, "wishlists") {
  PrimaryKey(id): UUID
  ForeignKey(user_id): UUID
  ForeignKey(product_id): UUID
  added_at: TIMESTAMP
}

' Relationships
users "1" --> "0..*" user_sessions : has
users "1" --> "0..*" addresses : has
users "1" --> "0..*" orders : places
users "1" --> "0..*" payment_methods : has
users "1" --> "0..*" reviews : writes
users "1" --> "0..*" cart_items : has
users "1" --> "0..*" wishlists : has

products "1" --> "0..*" product_variants : has
products "0..*" --> "1" categories : belongs_to
products "0..*" --> "1" brands : belongs_to
products "1" --> "0..*" order_items : ordered_in
products "1" --> "0..*" inventory : tracked_in
products "1" --> "0..*" reviews : receives
products "1" --> "0..*" cart_items : in_cart
products "1" --> "0..*" wishlists : wished

categories "0..*" --> "0..1" categories : parent

orders "1" --> "1..*" order_items : contains
orders "1" --> "1" payments : requires

order_items "0..*" --> "1" products : references
order_items "0..*" --> "0..1" product_variants : may_have

inventory "0..*" --> "1" warehouses : stored_in
inventory "1" --> "0..*" stock_movements : has

payment_methods "0..*" --> "1" users : belongs_to

cart_items "0..*" --> "0..1" product_variants : may_have

@enduml
